// <auto-generated />
using System;
using Guarantib.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Guarantib.Migrations
{
    [DbContext(typeof(GuarantibContext))]
    [Migration("20240227094634_suivisMig")]
    partial class suivisMig
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClientProduit", b =>
                {
                    b.Property<int>("ClientsId")
                        .HasColumnType("int");

                    b.Property<int>("ProduitsId")
                        .HasColumnType("int");

                    b.HasKey("ClientsId", "ProduitsId");

                    b.HasIndex("ProduitsId");

                    b.ToTable("ClientProduit");
                });

            modelBuilder.Entity("Guarantib.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("clients");
                });

            modelBuilder.Entity("Guarantib.Models.Marque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Lien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("marques");
                });

            modelBuilder.Entity("Guarantib.Models.Produit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsClose")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumAkuito")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumSerie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("produits");
                });

            modelBuilder.Entity("Guarantib.Models.Professionnel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("KeepLoggedIn")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("job")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("professionnels");
                });

            modelBuilder.Entity("Guarantib.Models.Suivis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateSuivis")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etape")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dialogue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("suivis");
                });

            modelBuilder.Entity("MarqueProduit", b =>
                {
                    b.Property<int>("ProduitsId")
                        .HasColumnType("int");

                    b.Property<int>("marquesId")
                        .HasColumnType("int");

                    b.HasKey("ProduitsId", "marquesId");

                    b.HasIndex("marquesId");

                    b.ToTable("MarqueProduit");
                });

            modelBuilder.Entity("ProduitProfessionnel", b =>
                {
                    b.Property<int>("ProduitsId")
                        .HasColumnType("int");

                    b.Property<int>("ProfessionnelsId")
                        .HasColumnType("int");

                    b.HasKey("ProduitsId", "ProfessionnelsId");

                    b.HasIndex("ProfessionnelsId");

                    b.ToTable("ProduitProfessionnel");
                });

            modelBuilder.Entity("ProduitSuivis", b =>
                {
                    b.Property<int>("ProduitsId")
                        .HasColumnType("int");

                    b.Property<int>("suivisId")
                        .HasColumnType("int");

                    b.HasKey("ProduitsId", "suivisId");

                    b.HasIndex("suivisId");

                    b.ToTable("ProduitSuivis");
                });

            modelBuilder.Entity("ProfessionnelSuivis", b =>
                {
                    b.Property<int>("ProfessionnelsId")
                        .HasColumnType("int");

                    b.Property<int>("suivisId")
                        .HasColumnType("int");

                    b.HasKey("ProfessionnelsId", "suivisId");

                    b.HasIndex("suivisId");

                    b.ToTable("ProfessionnelSuivis");
                });

            modelBuilder.Entity("ClientProduit", b =>
                {
                    b.HasOne("Guarantib.Models.Client", null)
                        .WithMany()
                        .HasForeignKey("ClientsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Guarantib.Models.Produit", null)
                        .WithMany()
                        .HasForeignKey("ProduitsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MarqueProduit", b =>
                {
                    b.HasOne("Guarantib.Models.Produit", null)
                        .WithMany()
                        .HasForeignKey("ProduitsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Guarantib.Models.Marque", null)
                        .WithMany()
                        .HasForeignKey("marquesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProduitProfessionnel", b =>
                {
                    b.HasOne("Guarantib.Models.Produit", null)
                        .WithMany()
                        .HasForeignKey("ProduitsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Guarantib.Models.Professionnel", null)
                        .WithMany()
                        .HasForeignKey("ProfessionnelsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProduitSuivis", b =>
                {
                    b.HasOne("Guarantib.Models.Produit", null)
                        .WithMany()
                        .HasForeignKey("ProduitsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Guarantib.Models.Suivis", null)
                        .WithMany()
                        .HasForeignKey("suivisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProfessionnelSuivis", b =>
                {
                    b.HasOne("Guarantib.Models.Professionnel", null)
                        .WithMany()
                        .HasForeignKey("ProfessionnelsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Guarantib.Models.Suivis", null)
                        .WithMany()
                        .HasForeignKey("suivisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
