@model IEnumerable<Guarantib.Models.Produit>
@inject Guarantib.Models.GuarantibContext _context

@{
    ViewData["Title"] = "Produits";

    // Définition de la fonction pour récupérer le nom du client par ID
    string GetClientNameById(int clientId)
    {
        var client = Model.SelectMany(p => p.Clients).FirstOrDefault(c => c.Id == clientId);
        return client != null ? client.Name : "Client non trouvé";
    }

    // Définition de la fonction pour récupérer le nom de la marque par ID
    string GetMarqueNameById(int marqueId)
    {
        var marque = Model.SelectMany(p => p.marques).FirstOrDefault(m => m.Id == marqueId);
        return marque != null ? marque.Name : "Marque non trouvée";
    }

    // Définition de la fonction pour récupérer le nom de l'user par ID
    string GetUserNameById(int professionnelId)
    {
        var professionnel = Model.SelectMany(p => p.Professionnels).FirstOrDefault(u => u.Id == professionnelId);
        
        return professionnel != null ? professionnel.Name : "Utilisateur non trouvé";
    }

}


<style>
    h1, h4 {
        text-align: center;
    }

    .table {
        width: 100%;
        border-collapse: collapse;
        padding-bottom: 20%;
    }

        .table th, .table td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: center;
        }

        .table th {
            background-color: #f2f2f2;
        }

        .table tbody tr:hover {
            background-color: #f5f5f5;
        }

        .table a{
            
            opacity: 1;
        }

        .lien {
            text-decoration: none;
            text-decoration-style:solid;
            color: #000000;
            border-radius: 10px;
            background-color: #FCD127;
            padding-top:1%;
            padding-bottom:3%;
            padding-left: 3%;
            padding-right: 3%;
            margin:4%;
            margin-top:15px;
            border: 1px solid rgb(63, 63, 63);
            
        }

        .table a:hover {
                text-decoration: none;
                color: #007bff;
                
        }

        .cellule{
        text-decoration: none;
        padding: 5%;
        background-color: #BDD8D5;
        border-radius: 20%;
        }

        th{
            width:15%;
        }

        .fonction{
            width: 15%;
        }

        table td, table th {
            line-height: 2;
            text-align: center;
            vertical-align: middle;
        }


        .CheckBtn{
            border:none;
            background-color:white;
            
            margin:0%;
        }

</style>
 
    
        

        <h1>Produits</h1>
   
    <hr />
    <br />


<div class="table-responsive">
    <table class="table table-hover">
        <thead>
            <tr>
                <th scope="col">
                    Clients
                </th>
                <th scope="col" class="fonction">
                    @* @Html.DisplayNameFor(model => model.Name) *@ Nom
                </th>
                <th scope="col">
                    @* @Html.DisplayNameFor(model => model.Brand) *@ Marque
                </th>
                <th scope="col">
                    @* @Html.DisplayNameFor(model => model.Brand) *@ Modèle
                </th>
                <th scope="col">
                    @* @Html.DisplayNameFor(model => model.StartDate) *@ Date de Création
                </th>
                <th scope="col">
                    @* @Html.DisplayNameFor(model => model.EndDate) *@ fin de garantie
                </th>
                <th scope="col">
                 @*    @Html.DisplayNameFor(model => model.NumFile) *@ Numéro de Dossier
                </th>
                <th scope="col">
                    @* @Html.DisplayNameFor(model => model.NumAkuito) *@ Numéro Akuito
                </th>
                <th scope="col">
                   @*  @Html.DisplayNameFor(model => model.NumSerie) *@ Numéro de série
                </th>
                <th scope="col">
                    @* @Html.DisplayNameFor(model => model.IsClose) *@ Clôturer   
                </th>
                <th class="fonction" scope="col">
                   @*  @Html.DisplayNameFor(model => model.Description) *@ Note
                </th>
                <th class="fonction" scope="col">
                    Suivis par
                </th>
                <th class="fonction" scope="col">
                    Fonctionalités
                </th>
            </tr>
        </thead>
        <tbody>
                @foreach (var item in Model) 
                {
                            <tr>
                                <th scope="row">
                                    @if (item.Clients != null)
                                    {
                                        @foreach (var clientId in item.Clients.Select(c => c.Id))
                                        {
                                            <span>@GetClientNameById(clientId)</span>

                                        }
                                    }
                                    else
                                    {
                                        <span>Aucun client associé</span>
                                    }
                                </th>
                            <td >
                                <a class="cellule" asp-action="Details" asp-route-id="@item.Id"> @Html.DisplayFor(modelItem => item.Name) </a>
                            </td>
                                <td>
                                    @if (item.marques != null)
                                    {
                                        foreach (var marque in item.marques)
                                        {
                                            <span>@Html.DisplayFor(modelItem => marque.Name)</span>
                                            <br />
                                        }
                                    }
                                    else
                                    {
                                        <span>Aucune marque associée</span>
                                    }
                                </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Brand)
                    </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.StartDate)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.EndDate)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.NumFile)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.NumAkuito)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.NumSerie)
                            </td>
                            <td>
                        <button class="CheckBtn" onclick="location.href='@Url.Action("CheckChange", "Produits", new { id = item.Id })'">
                                    @if (!item.IsClose)
                                    {
                                <span class="text-warning">

                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-clipboard2-check" viewBox="0 0 16 16">
                                            <path d="M9.5 0a.5.5 0 0 1 .5.5.5.5 0 0 0 .5.5.5.5 0 0 1 .5.5V2a.5.5 0 0 1-.5.5h-5A.5.5 0 0 1 5 2v-.5a.5.5 0 0 1 .5-.5.5.5 0 0 0 .5-.5.5.5 0 0 1 .5-.5z" />
                                            <path d="M3 2.5a.5.5 0 0 1 .5-.5H4a.5.5 0 0 0 0-1h-.5A1.5 1.5 0 0 0 2 2.5v12A1.5 1.5 0 0 0 3.5 16h9a1.5 1.5 0 0 0 1.5-1.5v-12A1.5 1.5 0 0 0 12.5 1H12a.5.5 0 0 0 0 1h.5a.5.5 0 0 1 .5.5v12a.5.5 0 0 1-.5.5h-9a.5.5 0 0 1-.5-.5z" />
                                            <path d="M10.854 7.854a.5.5 0 0 0-.708-.708L7.5 9.793 6.354 8.646a.5.5 0 1 0-.708.708l1.5 1.5a.5.5 0 0 0 .708 0z" />
                                        </svg>

                                     </span>
                                    }
                                    else
                                    {
                                <span class="text-success">

                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-clipboard-x" viewBox="0 0 16 16">
                                        <path fill-rule="evenodd" d="M6.146 7.146a.5.5 0 0 1 .708 0L8 8.293l1.146-1.147a.5.5 0 1 1 .708.708L8.707 9l1.147 1.146a.5.5 0 0 1-.708.708L8 9.707l-1.146 1.147a.5.5 0 0 1-.708-.708L7.293 9 6.146 7.854a.5.5 0 0 1 0-.708" />
                                        <path d="M4 1.5H3a2 2 0 0 0-2 2V14a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-1v1h1a1 1 0 0 1 1 1V14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V3.5a1 1 0 0 1 1-1h1z" />
                                        <path d="M9.5 1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-1a.5.5 0 0 1 .5-.5zm-3-1A1.5 1.5 0 0 0 5 1.5v1A1.5 1.5 0 0 0 6.5 4h3A1.5 1.5 0 0 0 11 2.5v-1A1.5 1.5 0 0 0 9.5 0z" />
                                    </svg>

                                </span>
                                    }
                                </button>

                            </td>

                            <td>
                                @Html.DisplayFor(modelItem => item.Description)
                            </td>
                            @* affiche utilisateur *@
                            <td>
                                @if (item.Professionnels != null)
                                {
                                    foreach (var professionnel in item.Professionnels)
                                    {
                                        <span>@Html.DisplayFor(modelItem => professionnel.Name)</span>
                                        <br />
                                    }
                                }
                                else
                                {
                                    <span>Aucun professionnel associé</span>
                                }
                            </td>

                            <td>

                                <a class="lien" asp-action="Edit" asp-route-id="@item.Id">Modifier</a> 
                                <a class="lien" asp-action="Delete" asp-route-id="@item.Id">supprimer</a>
                                <a class="lien" asp-controller="Suivis" asp-action="GetSuivisByProduit" asp-route-id="@item.Id">Suivis</a>
                   
                            </td>
                        </tr>
                }
        </tbody>
    </table>
</div>